// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$chevron-left-gray-name: 'chevron-left-gray'
$chevron-left-gray-x: 0px
$chevron-left-gray-y: 39px
$chevron-left-gray-offset-x: 0px
$chevron-left-gray-offset-y: -39px
$chevron-left-gray-width: 18px
$chevron-left-gray-height: 26px
$chevron-left-gray-total-width: 90px
$chevron-left-gray-total-height: 65px
$chevron-left-gray-image: 'sprite.png'
$chevron-left-gray: (0px, 39px, 0px, -39px, 18px, 26px, 90px, 65px, 'sprite.png', 'chevron-left-gray', )
$chevron-left-white-name: 'chevron-left-white'
$chevron-left-white-x: 18px
$chevron-left-white-y: 39px
$chevron-left-white-offset-x: -18px
$chevron-left-white-offset-y: -39px
$chevron-left-white-width: 18px
$chevron-left-white-height: 26px
$chevron-left-white-total-width: 90px
$chevron-left-white-total-height: 65px
$chevron-left-white-image: 'sprite.png'
$chevron-left-white: (18px, 39px, -18px, -39px, 18px, 26px, 90px, 65px, 'sprite.png', 'chevron-left-white', )
$chevron-right-gray-name: 'chevron-right-gray'
$chevron-right-gray-x: 36px
$chevron-right-gray-y: 39px
$chevron-right-gray-offset-x: -36px
$chevron-right-gray-offset-y: -39px
$chevron-right-gray-width: 18px
$chevron-right-gray-height: 26px
$chevron-right-gray-total-width: 90px
$chevron-right-gray-total-height: 65px
$chevron-right-gray-image: 'sprite.png'
$chevron-right-gray: (36px, 39px, -36px, -39px, 18px, 26px, 90px, 65px, 'sprite.png', 'chevron-right-gray', )
$chevron-right-white-name: 'chevron-right-white'
$chevron-right-white-x: 54px
$chevron-right-white-y: 39px
$chevron-right-white-offset-x: -54px
$chevron-right-white-offset-y: -39px
$chevron-right-white-width: 18px
$chevron-right-white-height: 26px
$chevron-right-white-total-width: 90px
$chevron-right-white-total-height: 65px
$chevron-right-white-image: 'sprite.png'
$chevron-right-white: (54px, 39px, -54px, -39px, 18px, 26px, 90px, 65px, 'sprite.png', 'chevron-right-white', )
$email-name: 'email'
$email-x: 0px
$email-y: 0px
$email-offset-x: 0px
$email-offset-y: 0px
$email-width: 39px
$email-height: 39px
$email-total-width: 90px
$email-total-height: 65px
$email-image: 'sprite.png'
$email: (0px, 0px, 0px, 0px, 39px, 39px, 90px, 65px, 'sprite.png', 'email', )
$inst-name: 'inst'
$inst-x: 39px
$inst-y: 0px
$inst-offset-x: -39px
$inst-offset-y: 0px
$inst-width: 36px
$inst-height: 36px
$inst-total-width: 90px
$inst-total-height: 65px
$inst-image: 'sprite.png'
$inst: (39px, 0px, -39px, 0px, 36px, 36px, 90px, 65px, 'sprite.png', 'inst', )
$insta-small-name: 'insta-small'
$insta-small-x: 75px
$insta-small-y: 0px
$insta-small-offset-x: -75px
$insta-small-offset-y: 0px
$insta-small-width: 15px
$insta-small-height: 15px
$insta-small-total-width: 90px
$insta-small-total-height: 65px
$insta-small-image: 'sprite.png'
$insta-small: (75px, 0px, -75px, 0px, 15px, 15px, 90px, 65px, 'sprite.png', 'insta-small', )
$placeholder-name: 'placeholder'
$placeholder-x: 75px
$placeholder-y: 15px
$placeholder-offset-x: -75px
$placeholder-offset-y: -15px
$placeholder-width: 10px
$placeholder-height: 13px
$placeholder-total-width: 90px
$placeholder-total-height: 65px
$placeholder-image: 'sprite.png'
$placeholder: (75px, 15px, -75px, -15px, 10px, 13px, 90px, 65px, 'sprite.png', 'placeholder', )
$spritesheet-width: 90px
$spritesheet-height: 65px
$spritesheet-image: 'sprite.png'
$spritesheet-sprites: ($chevron-left-gray, $chevron-left-white, $chevron-right-gray, $chevron-right-white, $email, $inst, $insta-small, $placeholder, )
$spritesheet: (90px, 65px, 'sprite.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
